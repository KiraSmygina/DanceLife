{"version":3,"sources":["logger.js"],"names":["winston","require","levels","warn","error","level","process","env","NODE_ENV","isDevelopment","info","http","colors","addColors","debug","format","combine","timestamp","all","concat","message","transports","Console","filename","File","createLogger","module","exports","logger"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,OAAS,CADTF,MAAO,EAGTG,KAAM,EAFJD,KAAM,EACRE,KADW,EAEXD,MAFW,GAIPE,MAJO,WAUX,MAVJ,iBAKWC,QAAAC,IAAAC,UAAA,eAKgB,QAAU,QAF3BD,OAAMD,CACZF,MAAMK,MACNN,KAAOM,SAHXC,KAAA,QASIC,KAAM,UAJJC,MAAM,SAGRF,QAAMG,UAHKD,QAKXE,IAAAA,OAAOd,QAAAe,OAAAC,QALXhB,QAAAe,OAAAE,UAAA,CAAAF,OAAA,2BAQAf,QAAQa,OAAUD,SAAlB,CAAAM,KAAA,IAEMH,QAAMA,OAAGf,OACsB,SAAAU,GAAA,MAAA,GAAAS,OAAET,EAAAO,UAAF,KAAAE,OAAET,EAAAL,MAAF,MAAAc,OAAET,EAAAU,YAG/BC,WAAaX,CAJrB,IAAAV,QAAAqB,WAAAC,QAQMD,IAAAA,QAAUA,WACRrB,KAAQqB,CAERE,SAAU,iBACLlB,MAAE,UAEmBkB,IAAAA,QAAUF,WAAAG,KAAA,CAAAD,SAAA,kBAIxClB,OAAYL,QADoByB,aAAA,CAEhCvB,MAAAA,QACAa,OAAAA,OACAM,OAAAA,OAJJA,WAAAA,aAOAK,OAAOC,QAAUC","file":"logger.min.js","sourcesContent":["const winston = require('winston');\nconst levels = {\n    error: 0,\n    warn: 1,\n    info: 2,\n    http: 3,\n    debug: 4,\n};\nconst level = () => {\n    const env = process.env.NODE_ENV || 'development';\n    const isDevelopment = env === 'development';\n    return isDevelopment ? 'debug' : 'warn';\n};\nconst colors = {\n    error: 'red',\n    warn: 'yellow',\n    info: 'green',\n    http: 'magenta',\n    debug: 'white',\n};\n\nwinston.addColors(colors);\n\nconst format = winston.format.combine(\n    winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss:ms' }),\n    winston.format.colorize({ all: true }),\n    winston.format.printf(\n        (info) => `${info.timestamp} ${info.level}: ${info.message}`,\n    ),\n);\n\nconst transports = [\n    new winston.transports.Console(),\n    new winston.transports.File({\n        filename: 'logs/error.log',\n        level: 'error',\n    }),\n    new winston.transports.File({ filename: 'logs/all.log' }),\n];\n\nconst logger = winston.createLogger({\n    level: level(),\n    levels,\n    format,\n    transports,\n});\n\nmodule.exports = logger;"]}