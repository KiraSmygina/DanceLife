{"version":3,"sources":["logger.js"],"names":["winston","require","levels","error","warn","info","http","debug","level","env","process","NODE_ENV","isDevelopment","colors","addColors","format","combine","timestamp","colorize","all","printf","message","transports","Console","File","filename","logger","createLogger","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE,CADI;AAEXC,EAAAA,IAAI,EAAE,CAFK;AAGXC,EAAAA,IAAI,EAAE,CAHK;AAIXC,EAAAA,IAAI,EAAE,CAJK;AAKXC,EAAAA,KAAK,EAAE;AALI,CAAf;;AAOA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,MAAMC,aAAa,GAAGH,GAAG,KAAK,aAA9B;AACA,SAAOG,aAAa,GAAG,OAAH,GAAa,MAAjC;AACH,CAJD;;AAKA,IAAMC,MAAM,GAAG;AACXV,EAAAA,KAAK,EAAE,KADI;AAEXC,EAAAA,IAAI,EAAE,QAFK;AAGXC,EAAAA,IAAI,EAAE,OAHK;AAIXC,EAAAA,IAAI,EAAE,SAJK;AAKXC,EAAAA,KAAK,EAAE;AALI,CAAf;AAQAP,OAAO,CAACc,SAAR,CAAkBD,MAAlB;AAEA,IAAME,MAAM,GAAGf,OAAO,CAACe,MAAR,CAAeC,OAAf,CACXhB,OAAO,CAACe,MAAR,CAAeE,SAAf,CAAyB;AAAEF,EAAAA,MAAM,EAAE;AAAV,CAAzB,CADW,EAEXf,OAAO,CAACe,MAAR,CAAeG,QAAf,CAAwB;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAxB,CAFW,EAGXnB,OAAO,CAACe,MAAR,CAAeK,MAAf,CACI,UAACf,IAAD;AAAA,mBAAaA,IAAI,CAACY,SAAlB,cAA+BZ,IAAI,CAACG,KAApC,eAA8CH,IAAI,CAACgB,OAAnD;AAAA,CADJ,CAHW,CAAf;AAQA,IAAMC,UAAU,GAAG,CACf,IAAItB,OAAO,CAACsB,UAAR,CAAmBC,OAAvB,EADe,EAEf,IAAIvB,OAAO,CAACsB,UAAR,CAAmBE,IAAvB,CAA4B;AACxBC,EAAAA,QAAQ,EAAE,gBADc;AAExBjB,EAAAA,KAAK,EAAE;AAFiB,CAA5B,CAFe,EAMf,IAAIR,OAAO,CAACsB,UAAR,CAAmBE,IAAvB,CAA4B;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAA5B,CANe,CAAnB;AASA,IAAMC,MAAM,GAAG1B,OAAO,CAAC2B,YAAR,CAAqB;AAChCnB,EAAAA,KAAK,EAAEA,KAAK,EADoB;AAEhCN,EAAAA,MAAM,EAANA,MAFgC;AAGhCa,EAAAA,MAAM,EAANA,MAHgC;AAIhCO,EAAAA,UAAU,EAAVA;AAJgC,CAArB,CAAf;AAOAM,MAAM,CAACC,OAAP,GAAiBH,MAAjB","sourcesContent":["const winston = require('winston');\nconst levels = {\n    error: 0,\n    warn: 1,\n    info: 2,\n    http: 3,\n    debug: 4,\n};\nconst level = () => {\n    const env = process.env.NODE_ENV || 'development';\n    const isDevelopment = env === 'development';\n    return isDevelopment ? 'debug' : 'warn';\n};\nconst colors = {\n    error: 'red',\n    warn: 'yellow',\n    info: 'green',\n    http: 'magenta',\n    debug: 'white',\n};\n\nwinston.addColors(colors);\n\nconst format = winston.format.combine(\n    winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss:ms' }),\n    winston.format.colorize({ all: true }),\n    winston.format.printf(\n        (info) => `${info.timestamp} ${info.level}: ${info.message}`,\n    ),\n);\n\nconst transports = [\n    new winston.transports.Console(),\n    new winston.transports.File({\n        filename: 'logs/error.log',\n        level: 'error',\n    }),\n    new winston.transports.File({ filename: 'logs/all.log' }),\n];\n\nconst logger = winston.createLogger({\n    level: level(),\n    levels,\n    format,\n    transports,\n});\n\nmodule.exports = logger;"],"file":"logger.dev.js"}